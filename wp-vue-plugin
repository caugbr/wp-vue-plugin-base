<?php

/**
 * Vue plugin base
 * ---------------
 * A starter code already integrated with Vue 2 to develop your WP plugin.
 * 
 * Author: Cau Guanabara
 */

require_once "./install-wp-vue-plugin.php";

function callWPVueInstaller($args) {
    $ivp = new InstallWPVuePlugin($args);
    if (!isset($ivp->args[1])) {
        $ivp->help();
        return;
    }

    if ($ivp->args[1] == 'remove') {
        if (empty($ivp->args[2])) {
            $ivp->line("\nThe plugin slug is required to command REMOVE.");
        } else {
            if ($ivp->askYesNo("This action will remove the entire plugin permanently. Are you sure? (Y/N)")) {
                $ivp->remove($ivp->args[2]);
            }
        }
        return;
    }

    if ($ivp->args[1] == 'templates') {
        $ivp->show_templates();
        return;
    }

    if ($ivp->args[1] == 'install') {
        if (empty($ivp->args[2])) {
            $ivp->line("\nThe plugin slug is required to command INSTALL.");
        } else {
            $ivp->install($ivp->args[2]);
        }
        return;
    }

    if ($ivp->args[1] == 'serve') {
        if (empty($ivp->args[2])) {
            $ivp->line("\nThe plugin slug is required to command SERVE.");
        } else {
            $ivp->startServer($ivp->args[2]);
        }
        return;
    }

    if ($ivp->args[1] == 'build') {
        if (empty($ivp->args[2])) {
            $ivp->line("\nThe plugin slug is required to command BUILD.");
        } else {
            $ivp->build($ivp->args[2]);
        }
        return;
    }

    if ($ivp->args[1] == 'lang-file') {
        if (empty($ivp->args[2]) || empty($ivp->args[3])) {
            $ivp->line();
            $ivp->line("The command LANG-FILE requires the plugin slug and the language code.");
        } else {
            $lname = $ivp->args[3];
            if (empty($ivp->args[4])) {
                $ivp->line();
                $ivp->line("Language name (written in that language)?");
                $lname = readline();
            }
            $ivp->extractStrings($ivp->args[2], $ivp->args[3], empty($ivp->args[4]) ? $lname : $ivp->args[4]);
        }
        return;
    }

    if ($ivp->args[1] != 'create') {
        $ivp->line();
        $ivp->line("Command not recognized '{$ivp->args[1]}'");
        return;
    }

    if (!empty($ivp->args[2])) {
        $ivp->pluginName = $ivp->args[2];
        $ivp->postTypeName = isset($ivp->args[3]) ? $ivp->args[3] : ucfirst($ivp->toPrefix($ivp->pluginName)) . " post";
    }

    $ivp->create();
}

callWPVueInstaller($argv);

?>